local DarkraiX = loadstring(game:HttpGet("https://raw.githubusercontent.com/ziugpro/Ui/refs/heads/main/UiLib", true))()
local Library = DarkraiX:Window("Tool Hub","","rbxthumb://type=Asset&id=76608011467652&w=420&h=420",Enum.KeyCode.RightControl);
Info = Library:Tab("‚öôÔ∏è Info")
Tab1 = Library:Tab("‚öôÔ∏è Main")
Bond = Library:Tab("‚öôÔ∏è Farming")

Info:Seperator("Info Script:")
Info:Label("Verison Script : Dead Rails Fake")
Info:Seperator("Price Script:")
Info:Label("0 VND - 0 USD")
Info:Seperator("Developer:")
Info:Label("Ziugpro - Theerathon")

Tab1:Seperator("Teleport")
Tab1:Button("Teleport To Gold",function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local original = root.Position

local function getTools()
    local list = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name:lower() == "gold bar" then
            table.insert(list, obj)
        end
    end
    return list
end

local function teleportTo(pos)
    root.CFrame = CFrame.new(pos)
end

local tools = getTools()
for _, tool in ipairs(tools) do
    if tool:FindFirstChild("Handle") then
        teleportTo(tool.Handle.Position + Vector3.new(0, 3, 0))
        task.wait(0.5)
    end
end

task.wait(1)
teleportTo(original)  
end)
Tab1:Button("Teleport To Silver",function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local original = root.Position

local function getTools()
    local list = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name:lower() == "silver bar" then
            table.insert(list, obj)
        end
    end
    return list
end

local function teleportTo(pos)
    root.CFrame = CFrame.new(pos)
end

local tools = getTools()
for _, tool in ipairs(tools) do
    if tool:FindFirstChild("Handle") then
        teleportTo(tool.Handle.Position + Vector3.new(0, 3, 0))
        task.wait(0.5)
    end
end

task.wait(1)
teleportTo(original)  
end)
Tab1:Button("Teleport To Apple",function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local original = root.Position

local function getTools()
    local list = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name:lower() == "apple" then
            table.insert(list, obj)
        end
    end
    return list
end

local function teleportTo(pos)
    root.CFrame = CFrame.new(pos)
end

local tools = getTools()
for _, tool in ipairs(tools) do
    if tool:FindFirstChild("Handle") then
        teleportTo(tool.Handle.Position + Vector3.new(0, 3, 0))
        task.wait(0.5)
    end
end

task.wait(1)
teleportTo(original)  
end)
Tab1:Button("Teleport To Chair",function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local original = root.Position

local function getTools()
    local list = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name:lower() == "chair" then
            table.insert(list, obj)
        end
    end
    return list
end

local function teleportTo(pos)
    root.CFrame = CFrame.new(pos)
end

local tools = getTools()
for _, tool in ipairs(tools) do
    if tool:FindFirstChild("Handle") then
        teleportTo(tool.Handle.Position + Vector3.new(0, 3, 0))
        task.wait(0.5)
    end
end

task.wait(1)
teleportTo(original)  
end)
Tab1:Button("Teleport To Bond",function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local original = root.Position

local function getTools()
    local list = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name:lower() == "quanglar" then
            table.insert(list, obj)
        end
    end
    return list
end

local function teleportTo(pos)
    root.CFrame = CFrame.new(pos)
end

local tools = getTools()
for _, tool in ipairs(tools) do
    if tool:FindFirstChild("Handle") then
        teleportTo(tool.Handle.Position + Vector3.new(0, 3, 0))
        task.wait(0.5)
    end
end

task.wait(1)
teleportTo(original)  
end)
Tab1:Button("Teleport To Molotov",function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local original = root.Position

local function getTools()
    local list = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name:lower() == "molotov" then
            table.insert(list, obj)
        end
    end
    return list
end

local function teleportTo(pos)
    root.CFrame = CFrame.new(pos)
end

local tools = getTools()
for _, tool in ipairs(tools) do
    if tool:FindFirstChild("Handle") then
        teleportTo(tool.Handle.Position + Vector3.new(0, 3, 0))
        task.wait(0.5)
    end
end

task.wait(1)
teleportTo(original)  
end)
Tab1:Seperator("Bring Item")
Tab1:Button("Bring Quanglar",function()
    local player = game.Players.LocalPlayer
		if not player.Character then return end
		local root = player.Character:FindFirstChild("HumanoidRootPart")
		if not root then return end

		for _, tool in pairs(workspace:GetDescendants()) do
			if tool:IsA("Tool") and string.lower(tool.Name):find("quanglar") then
				local handle = tool:FindFirstChild("Handle")
				if handle then
					handle.CFrame = root.CFrame * CFrame.new(0, 0, -5)
				end
			end
		end
end)
Tab1:Button("Bring Gold",function()
    local player = game.Players.LocalPlayer
		if not player.Character then return end
		local root = player.Character:FindFirstChild("HumanoidRootPart")
		if not root then return end

		for _, tool in pairs(workspace:GetDescendants()) do
			if tool:IsA("Tool") and string.lower(tool.Name):find("gold bar") then
				local handle = tool:FindFirstChild("Handle")
				if handle then
					handle.CFrame = root.CFrame * CFrame.new(0, 0, -5)
				end
			end
		end
end)
Tab1:Button("Bring Silver",function()
    local player = game.Players.LocalPlayer
		if not player.Character then return end
		local root = player.Character:FindFirstChild("HumanoidRootPart")
		if not root then return end

		for _, tool in pairs(workspace:GetDescendants()) do
			if tool:IsA("Tool") and string.lower(tool.Name):find("silver bar") then
				local handle = tool:FindFirstChild("Handle")
				if handle then
					handle.CFrame = root.CFrame * CFrame.new(0, 0, -5)
				end
			end
		end
end) 
Tab1:Seperator("Misc")
Tab1:Toggle("Noclip",false,function(value)
if value then
			noclipConnection = game:GetService("RunService").Stepped:Connect(function()
				for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
					if part:IsA("BasePart") and part.CanCollide == true then
						part.CanCollide = false
					end
				end
			end)
		else
			if noclipConnection then
				noclipConnection:Disconnect()
				noclipConnection = nil
			end
			for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = true
				end
			end
		end
    end)
Tab1:Toggle("Unlock Camera",false,function(value)
game.Workspace.CurrentCamera.FieldOfView = 100
		game.Players.LocalPlayer.CameraMaxZoomDistance = 100
		game.Players.LocalPlayer.CameraMinZoomDistance = 0
		local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.WalkSpeed = 100
		end
		local lighting = game:GetService("Lighting")
		lighting.FogEnd = 1000000
		lighting.FogStart = 0
		lighting.Brightness = 3
		lighting.ClockTime = 12
    end)

Tab1:Slider("Speed Runners",1,10000,25,function(value)
        local char = game.Players.LocalPlayer.Character
		if char then
			local humanoid = char:FindFirstChildOfClass("Humanoid")
			if humanoid then
				humanoid.WalkSpeed = value
			end
		end
    end)
Tab1:Seperator("Antiban")
Tab1:Button("Delete All File Anticheat",function()
for _, v in pairs(game:GetDescendants()) do
    if v:IsA("LocalScript") or v:IsA("ModuleScript") or v:IsA("Script") then
        local n = v.Name:lower()
        local p = v:GetFullName():lower()

        if n:find("anti") or n:find("cheat") or n:find("ac") or n:find("ban") or n:find("kick") or
           p:find("anticheat") or p:find("kick") or p:find("detector") or p:find("security") then
            pcall(function() v:Destroy() end)
            print("üî• ƒê√£ x√≥a nghi v·∫•n:", v:GetFullName())
        end
    end
end
    end)
Tab1:Line()

Bond:Slider("Speedd Tween",1000,10000,2500,function(value)
    speedTween = value
end)

Bond:Toggle("Auto Farm Quanglar",false,function(value)
    if value then
        local toolFound = nil
        for _, tool in ipairs(game:GetDescendants()) do
            if tool:IsA("Tool") and string.lower(tool.Name) == "quanglar" then
                toolFound = tool
                break
            end
        end

        if toolFound and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local tweenInfo = TweenInfo.new((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - toolFound.Handle.Position).Magnitude / speedTween, Enum.EasingStyle.Linear)
            local tween = game:GetService("TweenService"):Create(
                game.Players.LocalPlayer.Character.HumanoidRootPart,
                tweenInfo,
                {CFrame = toolFound.Handle.CFrame}
            )
            tween:Play()
        end
    end
end)
Bond:Toggle("Auto Comlect", false, function(value)
    _G.AutoClick = value

    local VirtualInputManager = game:GetService("VirtualInputManager")

    while _G.AutoClick do
        task.wait()
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
    end
end)
